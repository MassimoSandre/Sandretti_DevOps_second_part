name: C/C++ CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build_and_test:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Configure
      run: |
          git submodule update --init --recursive
          mkdir -p build
          cd build
          cmake ..

    - name: Build
      run: |
          cd build
          make

    - name: Run tests
      run: |
          cd build
          ctest --output-on-failure
  build_container:
    needs: build_and_test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Install Singularity
        run: |
          sudo -E apt-get update
          sudo -E apt-get install -y singularity-container

      - name: Build Singularity container image
        run: |
          # build the Singularity image from the definition file
          sudo singularity build image_to_grayscale.sif singularity.def

      - uses: actions/upload-artifact@v4
        with:
          name: singularity-image
          path: image_to_grayscale.sif
  
  send_to_cluster:
    needs: build_container
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: singularity-image
          path: ./

      - name: Install expect
        run: sudo apt-get update && sudo apt-get install -y expect

      - name: Send files and Sbatch job
        env:
          SSH_PASSPHRASE: ${{ secrets.SSH_PASSPHRASE }}
          CINECA_USERNAME: ${{ secrets.CINECA_USERNAME }}
        run: |
          mkdir -p ~/.ssh
          
          # Decode SSH keys from base64 and save them as files in the .ssh directory
          echo "${{ secrets.SSH_PRIVATE_KEY }}" | base64 -d > ~/.ssh/my_key
          echo "${{ secrets.SSH_PUBLIC_KEY }}"  | base64 -d > ~/.ssh/my_key.pub
          echo "${{ secrets.SSH_CERT }}"        | base64 -d > ~/.ssh/my_key-cert.pub

          # Set permissions for the SSH keys
          chmod 600 ~/.ssh/my_key
          chmod 644 ~/.ssh/my_key.pub ~/.ssh/my_key-cert.pub

          eval "$(ssh-agent -s)"

          # Add the private key to the SSH agent (expecting a passphrase)
          expect <<EOF
          spawn ssh-add "$HOME/.ssh/my_key"
          expect "Enter passphrase for $HOME/.ssh/my_key:"
          send "$SSH_PASSPHRASE\r"
          expect eof
          EOF

          # deleting the old files on the cluster and creating the job directory
          ssh -i ~/.ssh/my_key -o StrictHostKeyChecking=no $CINECA_USERNAME@login.g100.cineca.it "
            rm -rf ~/jobs/img_to_grayscale_automatic && \
            mkdir -p ~/jobs/img_to_grayscale_automatic
          "
          ssh-keygen -f '/home/runner/.ssh/known_hosts' -R 'login.g100.cineca.it'

          # Copying the job script, input images, and Singularity image to the cluster
          scp -i ~/.ssh/my_key -o StrictHostKeyChecking=no galileo100/job.sh $CINECA_USERNAME@login.g100.cineca.it:~/jobs/img_to_grayscale_automatic/
          ssh-keygen -f '/home/runner/.ssh/known_hosts' -R 'login.g100.cineca.it'
          scp -i ~/.ssh/my_key -o StrictHostKeyChecking=no -r galileo100/input_images $CINECA_USERNAME@login.g100.cineca.it:~/jobs/img_to_grayscale_automatic/
          ssh-keygen -f '/home/runner/.ssh/known_hosts' -R 'login.g100.cineca.it'
          scp -i ~/.ssh/my_key -o StrictHostKeyChecking=no image_to_grayscale.sif $CINECA_USERNAME@login.g100.cineca.it:~/jobs/img_to_grayscale_automatic/
          ssh-keygen -f '/home/runner/.ssh/known_hosts' -R 'login.g100.cineca.it'

          # Submitting the job to the cluster
          jobid=$(ssh -i ~/.ssh/my_key -o StrictHostKeyChecking=no $CINECA_USERNAME@login.g100.cineca.it "cd ~/jobs/img_to_grayscale_automatic/ && sbatch job.sh" | awk '{print $4}')
          echo "Job ID: $jobid"

          # Wait for the job to complete
          ssh-keygen -f '/home/runner/.ssh/known_hosts' -R 'login.g100.cineca.it'
          while ssh -i ~/.ssh/my_key -o StrictHostKeyChecking=no $CINECA_USERNAME@login.g100.cineca.it "squeue -j $jobid" | grep -q $jobid; do
            echo "Job $jobid is still running..."
            sleep 5
            ssh-keygen -f '/home/runner/.ssh/known_hosts' -R 'login.g100.cineca.it'
          done

          echo "Job $jobid completed."

          # Fetching the job output and error files, and the output images
          echo "Job output:"
          ssh-keygen -f '/home/runner/.ssh/known_hosts' -R 'login.g100.cineca.it'
          ssh -i ~/.ssh/my_key -o StrictHostKeyChecking=no $CINECA_USERNAME@login.g100.cineca.it "cat ~/jobs/img_to_grayscale_automatic/job_${jobid}.out"
          echo "Job error:"
          ssh-keygen -f '/home/runner/.ssh/known_hosts' -R 'login.g100.cineca.it'
          ssh -i ~/.ssh/my_key -o StrictHostKeyChecking=no $CINECA_USERNAME@login.g100.cineca.it "cat ~/jobs/img_to_grayscale_automatic/job_${jobid}.err"

          ssh-keygen -f '/home/runner/.ssh/known_hosts' -R 'login.g100.cineca.it'
          scp -i ~/.ssh/my_key -o StrictHostKeyChecking=no -r $CINECA_USERNAME@login.g100.cineca.it:~/jobs/img_to_grayscale_automatic/output_images ./output_images

      - uses: actions/upload-artifact@v4
        with:
          name: output-images
          path: ./output_images